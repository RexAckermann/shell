(undo-tree-save-format-version . 1)
"3742cc831c65329303ac59d30ed8c32b0a1d481a"
[nil nil nil nil (25742 57275 682340 385000) 0 nil]
([nil nil ((apply -2 2572 2656 undo--wrap-and-run-primitive-undo 2572 2656 ((nil fontified t 2577 . 2579) (2577 . 2579) 2600)) (t 25742 56390 183376 523000)) nil (25742 57275 682339 383000) 0 nil])
([nil nil ((apply -2 2502 2574 undo--wrap-and-run-primitive-undo 2502 2574 ((nil fontified t 2507 . 2509) (2507 . 2509) 2541))) nil (25742 57275 682338 602000) 0 nil])
([nil nil ((2600 . 2612) (2584 . 2599) (#("XD" 0 2 (fontified t ws-butler-chg chg face (font-lock-variable-name-face font-lock-string-face))) . -2584) (undo-tree-id10 . -2) (undo-tree-id11 . -2) 2586 (2585 . 2586) (#("S" 0 1 (fontified t ws-butler-chg chg face (font-lock-variable-name-face font-lock-string-face))) . -2585) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 2586 (2583 . 2586) (2582 . 2584) (#("\"" 0 1 (ws-butler-chg chg fontified nil)) . -2582) (2582 . 2583) (2579 . 2582) (#("#" 0 1 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face)) . -2579) (undo-tree-id14 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face)) . -2580) (undo-tree-id15 . -1) 2581 (#("
" 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-face)) . 2581) (2574 . 2581) (2573 . 2575) 2507) nil (25742 57275 682336 815000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2611 . 2612) (2612 . 2641) 2611) nil (25742 57275 682330 543000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2640 . 2641) (2641 . 2670) 2640) nil (25742 57275 682329 758000) 0 nil])
([nil nil ((#("\"$XDG_CONFIG_HOME\"/zsh/.zshrc" 0 1 (ws-butler-chg chg fontified nil face font-lock-string-face) 1 2 (ws-butler-chg chg fontified nil face (font-lock-constant-face font-lock-string-face)) 2 17 (ws-butler-chg chg fontified nil face (font-lock-variable-name-face font-lock-string-face)) 17 18 (ws-butler-chg chg fontified nil face font-lock-string-face) 18 29 (ws-butler-chg chg fontified nil)) . 2641) (undo-tree-id8 . -28) (undo-tree-id9 . 29) (nil rear-nonsticky t 2640 . 2641)) nil (25742 57275 682328 845000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 1513) (1512 . 1514) (#("\"" 0 1 (fontified nil ws-butler-chg chg)) . -1512) (1512 . 1513) (1517 . 1518) (1637 . 1638) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 1632) (1631 . 1633) (#("\"" 0 1 (fontified nil ws-butler-chg chg)) . -1631) (1631 . 1632) (1729 . 1737) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 1961) (1960 . 1962) (#("\"" 0 1 (fontified nil ws-butler-chg chg)) . -1960) (1960 . 1961) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 1999) (1998 . 2000) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face) ws-butler-chg chg)) . -1998) (1998 . 1999) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 2126) (2125 . 2127) (#("\"" 0 1 (fontified nil face (font-lock-variable-name-face font-lock-string-face) ws-butler-chg chg)) . -2125) (2125 . 2126) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 2091) (2090 . 2092) (#("\"" 0 1 (fontified nil ws-butler-chg chg)) . -2090) (2090 . 2091) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 2222) (2221 . 2223) (#("\"" 0 1 (fontified nil ws-butler-chg chg)) . -2221) (2221 . 2222) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 2256) (2255 . 2257) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face) ws-butler-chg chg)) . -2255) (2255 . 2256) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 2392) (2391 . 2393) (#("\"" 0 1 (fontified nil face (font-lock-variable-name-face font-lock-string-face) ws-butler-chg chg)) . -2391) (2391 . 2392) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 2357) (2356 . 2358) (#("\"" 0 1 (fontified nil ws-butler-chg chg)) . -2356) (2356 . 2357) (2507 . 2509) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -2507) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 2508 (2501 . 2508) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 2655) (2654 . 2656) (#("\"" 0 1 (fontified nil ws-butler-chg chg face (sh-quoted-exec font-lock-string-face))) . -2654) (2654 . 2655) (2642 . 2643) (2648 . 2652) (#(" " 0 1 (fontified t ws-butler-chg chg face sh-quoted-exec)) . -2648) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (#("+" 0 1 (fontified t ws-butler-chg chg face sh-quoted-exec)) . -2649) (undo-tree-id5 . -1) 2650 (2649 . 2650) (2644 . 2649) (2643 . 2645) (#("(" 0 1 (ws-butler-chg chg fontified nil)) . -2643) (2642 . 2644) (#("?" 0 1 (ws-butler-chg chg fontified t)) . -2642) (undo-tree-id6 . -1) 2643 (2642 . 2643) (#("4" 0 1 (ws-butler-chg chg fontified t)) . -2642) (undo-tree-id7 . -1) 2643 (2642 . 2643) (2641 . 2642)) nil (25742 57275 682321 710000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 1412) (1411 . 1413) (#("\"" 0 1 (fontified nil face (sh-quoted-exec font-lock-string-face) ws-butler-chg chg)) . -1411) (1411 . 1412) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 1405) (1404 . 1406) (#("\"" 0 1 (fontified nil ws-butler-chg chg)) . -1404) (1404 . 1405)) nil (25742 57275 682309 520000) 0 nil])
([nil nil ((apply -54 238 1759 undo--wrap-and-run-primitive-undo 238 1759 ((1755 . 1757) (1744 . 1746) (1734 . 1736) (1714 . 1716) (1702 . 1704) (1638 . 1640) (1575 . 1577) (1515 . 1517) (1456 . 1458) (1411 . 1413) (1381 . 1383) (1337 . 1339) (1298 . 1300) (1231 . 1233) (1089 . 1091) (960 . 962) (821 . 823) (689 . 691) (568 . 570) (541 . 543) (511 . 513) (476 . 478) (416 . 418) (377 . 379) (303 . 305) (261 . 263) (238 . 240) 1704))) nil (25742 57275 682308 366000) 0 nil])
([nil nil ((3089 . 3090) (2908 . 2909) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 1834) (1833 . 1835) (#("\"" 0 1 (fontified nil face (sh-quoted-exec font-lock-string-face) ws-butler-chg chg)) . -1833) (1833 . 1834) (1822 . 1823) (#("$" 0 1 (fontified t face (sh-quoted-exec font-lock-string-face))) . 1822) (1821 . 1822)) nil (25742 57275 682307 254000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t ws-butler-chg chg face sh-quoted-exec)) . -3211) (undo-tree-id0 . -1) 3212 (3211 . 3212) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 3102) (3101 . 3103) (#("\"" 0 1 (fontified nil face (sh-quoted-exec font-lock-string-face) ws-butler-chg chg)) . -3101) (3101 . 3102)) nil (25742 57275 682304 731000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 3215) (3214 . 3216) (#("\"" 0 1 (fontified nil face (sh-quoted-exec font-lock-string-face) ws-butler-chg chg)) . -3214) (3214 . 3215) (3202 . 3203)) nil (25742 57275 682257 267000) 0 nil])
([nil nil ((#("     " 0 5 (ws-butler-chg chg fontified t)) . 1321) (#("     " 0 5 (ws-butler-chg chg fontified t)) . 405) (#("     " 0 5 (ws-butler-chg chg fontified t)) . 297)) nil (25742 57275 682252 597000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t ws-butler-chg chg)) . -2738) (undo-tree-id67 . -1) (#("/" 0 1 (fontified t ws-butler-chg chg)) . -2739) (undo-tree-id68 . -1) 2740 (2737 . 2740) (2732 . 2737) (2726 . 2732) (t 25742 57275 686628 462000) 2704) nil (25742 57469 682956 285000) 0 nil])
([nil nil ((2732 . 2738) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -2732) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg face (font-lock-type-face))) . -2733) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2734) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("\"" 0 1 (fontified nil ws-butler-chg chg face font-lock-string-face)) . -2735) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("\"" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 2736) (#("$" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2736) (undo-tree-id57 . -1) (undo-tree-id58 . -1) 2737 (2736 . 2737) (2735 . 2737) (#("\"" 0 1 (fontified nil ws-butler-chg chg)) . -2735) (2735 . 2736) (2732 . 2735) (2726 . 2732) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -2726) (undo-tree-id59 . -1) 2727 (#("     " 0 5 (fontified t ws-butler-chg chg)) . -2727) (undo-tree-id60 . -5) 2732 (2727 . 2732) (#(" " 0 1 (fontified nil ws-butler-chg delete)) . 2727) (2726 . 2727) (#("s" 0 1 (fontified t ws-butler-chg delete)) . 2726) (#("-" 0 1 (fontified t ws-butler-chg delete)) . 2726) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 2726) (#("n" 0 1 (fontified t ws-butler-chg delete)) . 2726) (undo-tree-id61 . -1) (#("l" 0 1 (fontified t ws-butler-chg delete face (font-lock-type-face))) . 2726) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2726) (undo-tree-id62 . -1) (#("&" 0 1 (fontified t ws-butler-chg chg)) . -2727) (undo-tree-id63 . -1) (#("&" 0 1 (fontified t ws-butler-chg chg)) . -2728) (undo-tree-id64 . -1) 2729 (2726 . 2729) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -2726) (undo-tree-id65 . -1) 2727 (#("     " 0 1 (fontified t ws-butler-chg chg highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 1764 in setup.sh> . #<marker at 3444 in setup.sh>))) display "│" face highlight-indent-guides-character-face) 1 2 (fontified t ws-butler-chg chg highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 1764 in setup.sh> . #<marker at 3444 in setup.sh>)))) 2 3 (fontified t ws-butler-chg chg highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 1764 in setup.sh> . #<marker at 3444 in setup.sh>)))) 3 4 (fontified t ws-butler-chg chg highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 1764 in setup.sh> . #<marker at 3444 in setup.sh>)))) 4 5 (fontified t ws-butler-chg chg highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 1764 in setup.sh> . #<marker at 3444 in setup.sh>))))) . -2727) (undo-tree-id66 . -5) 2732) nil (25742 57469 682950 589000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2737 . 2738) (2738 . 2767) 2737) nil (25742 57469 682936 391000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -2767) (undo-tree-id48 . -1) 2768 (2767 . 2768)) nil (25742 57469 682935 380000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil ws-butler-chg chg)) . 2767) (nil ws-butler-chg delete 2768 . 2769) (2767 . 2768)) nil (25742 57469 682933 599000) 0 nil])
([nil nil ((#("\"$XDG_CONFIG_HOME\"/zsh/.zshrc" 0 1 (fontified nil ws-butler-chg chg face font-lock-string-face) 1 2 (fontified nil ws-butler-chg chg face (font-lock-constant-face font-lock-string-face)) 2 17 (fontified nil ws-butler-chg chg face (font-lock-variable-name-face font-lock-string-face)) 17 18 (fontified nil ws-butler-chg chg face font-lock-string-face) 18 29 (fontified nil ws-butler-chg chg)) . 2738) (undo-tree-id46 . -28) (undo-tree-id47 . -28) (nil rear-nonsticky t 2737 . 2738)) nil (25742 57469 682932 804000) 0 nil])
([nil nil ((2726 . 2732) (#(" &&" 0 1 (fontified nil ws-butler-chg chg) 1 2 (fontified nil ws-butler-chg chg) 2 3 (fontified nil ws-butler-chg chg)) . 2726) (undo-tree-id28 . -3) (2727 . 2729) (nil ws-butler-chg delete 2727 . 2728) (2726 . 2727) (nil ws-butler-chg delete 2727 . 2728) (2726 . 2727) (nil ws-butler-chg delete 2727 . 2728) (2726 . 2727) (nil ws-butler-chg delete 2727 . 2728) (2726 . 2727) (nil ws-butler-chg delete 2727 . 2728) (2726 . 2727) (nil ws-butler-chg delete 2727 . 2728) (2726 . 2727) (#("
" 0 1 (fontified nil ws-butler-chg chg)) . 2726) (undo-tree-id29 . -1) (2727 . 2728) (#("     " 0 5 (fontified nil ws-butler-chg chg)) . 2727) (undo-tree-id30 . -5) (2726 . 2732) (#("
     " 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified nil ws-butler-chg chg highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 1764 in setup.sh> . #<marker at 3444 in setup.sh>))) display "│" face highlight-indent-guides-character-face) 2 3 (fontified nil ws-butler-chg chg highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 1764 in setup.sh> . #<marker at 3444 in setup.sh>)))) 3 4 (fontified nil ws-butler-chg chg highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 1764 in setup.sh> . #<marker at 3444 in setup.sh>)))) 4 5 (fontified nil ws-butler-chg chg highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 1764 in setup.sh> . #<marker at 3444 in setup.sh>)))) 5 6 (fontified nil ws-butler-chg chg highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 1764 in setup.sh> . #<marker at 3444 in setup.sh>))))) . 2726) (undo-tree-id31 . -6) (undo-tree-id32 . -6) (undo-tree-id33 . -6) (undo-tree-id34 . -6) (undo-tree-id35 . -1) (#("cp " 0 1 (fontified nil ws-butler-chg chg) 1 2 (fontified nil ws-butler-chg chg face (font-lock-type-face)) 2 3 (fontified nil ws-butler-chg chg)) . 2732) (undo-tree-id36 . -3) (undo-tree-id37 . -3) (#("\"" 0 1 (fontified nil ws-butler-chg chg)) . 2735) (2735 . 2736) (#("\"\"" 0 1 (fontified nil ws-butler-chg chg face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face)) . 2735) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#("$" 0 1 (fontified nil ws-butler-chg chg face font-lock-string-face)) . 2736) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (nil ws-butler-chg delete 2737 . 2738) (2736 . 2737) (2732 . 2737) (#("ln -s " 0 2 (fontified t ws-butler-chg chg face (font-lock-type-face)) 2 5 (fontified t ws-butler-chg chg) 5 6 (fontified t ws-butler-chg chg rear-nonsticky nil)) . 2732) (undo-tree-id42 . -5) (undo-tree-id43 . -6) (undo-tree-id44 . -5) (undo-tree-id45 . -5)) nil (25742 57469 682929 493000) 0 nil])
([nil nil ((#("
     " 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified nil ws-butler-chg chg highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 1764 in setup.sh> . #<marker at 3444 in setup.sh>))) display "│" face highlight-indent-guides-character-face) 2 3 (fontified nil ws-butler-chg chg highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 1764 in setup.sh> . #<marker at 3444 in setup.sh>)))) 3 4 (fontified nil ws-butler-chg chg highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 1764 in setup.sh> . #<marker at 3444 in setup.sh>)))) 4 5 (fontified nil ws-butler-chg chg highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 1764 in setup.sh> . #<marker at 3444 in setup.sh>)))) 5 6 (fontified nil ws-butler-chg chg highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 1764 in setup.sh> . #<marker at 3444 in setup.sh>))))) . 2726) (undo-tree-id24 . -6) (undo-tree-id25 . -6) (undo-tree-id26 . -1) (#("ln -s" 0 1 (fontified nil face (font-lock-type-face)) 1 2 (fontified nil face (font-lock-type-face)) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil)) . 2732) (undo-tree-id27 . -2) (#(" ~/" 0 1 (fontified nil) 1 2 (fontified nil ws-butler-chg chg) 2 3 (fontified nil ws-butler-chg chg)) . 2737) (2738 . 2740)) nil (25742 57469 682916 148000) 0 nil])
([nil nil ((2732 . 2738) (2726 . 2732) (t 25742 57275 686628 462000) 2704) nil (25742 57469 682913 294000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2737 . 2738) (2738 . 2767) 2737) nil (25742 57469 682912 390000) 0 nil])
([nil nil ((2746 . 2753) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -2746) (undo-tree-id16 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -2747) (undo-tree-id17 . -1) 2748 (2745 . 2748) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2745) (undo-tree-id18 . -1) 2746 (2743 . 2746) (2740 . 2743) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -2740) (undo-tree-id19 . -1) 2741 (2740 . 2741) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -2740) (undo-tree-id20 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -2741) (undo-tree-id21 . -1) 2742 (2740 . 2742) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -2740) (undo-tree-id22 . -1) 2741 (2740 . 2741) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -2740) (undo-tree-id23 . -1) 2741 (2738 . 2741)) nil (25742 57469 682908 14000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2452 . 2453) (nil fontified nil 2371 . 2453) (2371 . 2453) 2370 (t 25742 57469 700174 643000)) nil (25742 57811 826950 876000) 0 nil])
([nil nil ((#("git clone https://github.com/qoomon/zsh-lazyload $ZSH_CUSTOM/plugins/zsh-lazyload
" 0 50 (ws-butler-chg chg fontified nil) 50 60 (ws-butler-chg chg fontified nil face font-lock-variable-name-face) 60 81 (ws-butler-chg chg fontified nil) 81 82 (ws-butler-chg chg rear-nonsticky nil fontified nil)) . 2371) (undo-tree-id214 . -81) (undo-tree-id215 . -81) (undo-tree-id216 . -82) (undo-tree-id217 . -49) (undo-tree-id218 . -60) (undo-tree-id219 . -82) (undo-tree-id220 . -82) (undo-tree-id221 . -82) (undo-tree-id222 . -82) (undo-tree-id223 . -81) (nil rear-nonsticky t 2452 . 2453)) nil (25742 57811 826949 193000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2462 . 2463) (nil fontified nil 2381 . 2463) (2381 . 2463) 2380 (t 25742 57469 700174 643000)) nil (25742 57811 826929 630000) 0 nil])
([nil nil ((#("git clone https://github.com/qoomon/zsh-lazyload $ZSH_CUSTOM/plugins/zsh-lazyload
" 0 50 (ws-butler-chg chg fontified nil) 50 60 (ws-butler-chg chg fontified nil face font-lock-variable-name-face) 60 81 (ws-butler-chg chg fontified nil) 81 82 (ws-butler-chg chg rear-nonsticky nil fontified nil)) . 2381) (undo-tree-id210 . -81) (undo-tree-id211 . -81) (undo-tree-id212 . -82) (undo-tree-id213 . -82) (nil rear-nonsticky t 2462 . 2463)) nil (25742 57811 826928 367000) 0 nil])
([nil nil ((#("     " 0 5 (fontified t ws-butler-chg chg)) . -2486) (undo-tree-id206 . -5) (undo-tree-id207 . -5) (undo-tree-id208 . -5) (undo-tree-id209 . -5) 2491 (2485 . 2491) (t 25742 57469 700174 643000) 2380) nil (25742 57811 826924 370000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2567 . 2568) (nil fontified nil 2486 . 2568) (2486 . 2568)) nil (25742 57811 826917 964000) 0 nil])
([nil nil ((2486 . 2491)) nil (25742 57811 826916 774000) 0 nil])
([nil nil ((#("     " 0 1 (ws-butler-chg chg fontified t highlight-indent-guides-prop (0 nil t 1 (character nil (face highlight-indent-guides-character-face display "│")) ((#<marker at 1764 in setup.sh> . #<marker at 3444 in setup.sh>))) display "│" face highlight-indent-guides-character-face) 1 2 (ws-butler-chg chg fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 1764 in setup.sh> . #<marker at 3444 in setup.sh>)))) 2 3 (ws-butler-chg chg fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 1764 in setup.sh> . #<marker at 3444 in setup.sh>)))) 3 4 (ws-butler-chg chg fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 1764 in setup.sh> . #<marker at 3444 in setup.sh>)))) 4 5 (ws-butler-chg chg fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 1764 in setup.sh> . #<marker at 3444 in setup.sh>))))) . 2486) (undo-tree-id69 . -4) (undo-tree-id70 . -5) (undo-tree-id71 . -1) (undo-tree-id72 . -5) (undo-tree-id73 . -5) (undo-tree-id74 . -5) (undo-tree-id75 . -5) (undo-tree-id76 . -5) (undo-tree-id77 . -5) (undo-tree-id78 . -5) (undo-tree-id79 . -5) (undo-tree-id80 . -5) (undo-tree-id81 . -5) (undo-tree-id82 . -5) (undo-tree-id83 . -5) (undo-tree-id84 . -5) (undo-tree-id85 . -5) (undo-tree-id86 . -5) (undo-tree-id87 . -5) (undo-tree-id88 . -5) (undo-tree-id89 . -5) (undo-tree-id90 . -5) (undo-tree-id91 . -5) (undo-tree-id92 . -5) (undo-tree-id93 . -5) (undo-tree-id94 . -5) (undo-tree-id95 . -5) (undo-tree-id96 . -5) (undo-tree-id97 . -5) (undo-tree-id98 . -5) (undo-tree-id99 . -5) (undo-tree-id100 . -5) (undo-tree-id101 . -5) (undo-tree-id102 . -5) (undo-tree-id103 . -5) (undo-tree-id104 . -5) (undo-tree-id105 . -5) (undo-tree-id106 . -5) (undo-tree-id107 . -5) (undo-tree-id108 . -5) (undo-tree-id109 . -5) (undo-tree-id110 . -5) (undo-tree-id111 . -5) (undo-tree-id112 . -5) (undo-tree-id113 . -5) (undo-tree-id114 . -5) (undo-tree-id115 . -5) (undo-tree-id116 . -5) (undo-tree-id117 . -5) (undo-tree-id118 . -5) (undo-tree-id119 . -5) (undo-tree-id120 . -5) (undo-tree-id121 . -5) (undo-tree-id122 . -5) (undo-tree-id123 . -5) (undo-tree-id124 . -5) (undo-tree-id125 . -5) (undo-tree-id126 . -5) (undo-tree-id127 . -5) (undo-tree-id128 . -5) (undo-tree-id129 . -5) (undo-tree-id130 . -5) (undo-tree-id131 . -5) (undo-tree-id132 . -5) (undo-tree-id133 . -5) (undo-tree-id134 . -5) (undo-tree-id135 . -5) (undo-tree-id136 . -5) (undo-tree-id137 . -5) (undo-tree-id138 . -5) (undo-tree-id139 . -5) (undo-tree-id140 . -5) (undo-tree-id141 . -5) (undo-tree-id142 . -5) (undo-tree-id143 . -5) (undo-tree-id144 . -5) (undo-tree-id145 . -5) (undo-tree-id146 . -4) (undo-tree-id147 . -4) (undo-tree-id148 . -4) (undo-tree-id149 . -4) (undo-tree-id150 . -4) (undo-tree-id151 . -4) (undo-tree-id152 . -4) (undo-tree-id153 . -4) (undo-tree-id154 . -4) (undo-tree-id155 . -4) (undo-tree-id156 . -4) (undo-tree-id157 . -4) (undo-tree-id158 . -4) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -4) (undo-tree-id171 . -4) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) (undo-tree-id198 . -4) (undo-tree-id199 . -4) (undo-tree-id200 . -4) (undo-tree-id201 . -4) (undo-tree-id202 . -4) (undo-tree-id203 . -4) (undo-tree-id204 . -4) (undo-tree-id205 . -4)) nil (25742 57811 826910 468000) 0 nil])
([nil nil ((2486 . 2491)) nil (25742 57811 826170 276000) 0 nil])
([nil nil ((3163 . 3168) (#("." 0 1 (fontified t ws-butler-chg chg)) . -3163) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) 3164 (3163 . 3164) (#("." 0 1 (fontified t ws-butler-chg chg)) . -3163) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -3164) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -3165) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) 3166 (3161 . 3166) (#("$" 0 1 (fontified t ws-butler-chg chg)) . -3161) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) 3162 (3161 . 3162) (#("$" 0 1 (fontified t)) . -3161) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -3162) (undo-tree-id747 . -1) (undo-tree-id748 . 1) (undo-tree-id749 . -1) (#("p" 0 1 (fontified t face sh-quoted-exec)) . -3163) (undo-tree-id750 . -1) (#("w" 0 1 (fontified t face sh-quoted-exec)) . -3164) (undo-tree-id751 . -1) (#("d" 0 1 (fontified t face sh-quoted-exec)) . -3165) (undo-tree-id752 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -3166) (undo-tree-id753 . -1) (undo-tree-id754 . 1) (undo-tree-id755 . -1) 3167 (#("
" 0 1 (fontified t ws-butler-chg chg)) . -3133) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) 3134 (#("     " 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg)) . -3134) (undo-tree-id759 . -5) (undo-tree-id760 . -5) 3139 (#("     " 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg) 3 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg)) . -3139) (undo-tree-id761 . -5) (undo-tree-id762 . -5) 3144 (#("p" 0 1 (fontified t ws-butler-chg chg)) . -3144) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (#("w" 0 1 (fontified t ws-butler-chg chg)) . -3145) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face (font-lock-type-face))) . -3146) (undo-tree-id767 . -1) (undo-tree-id768 . -1) 3147 (3144 . 3147) (3133 . 3144) (t 25742 57811 840022 200000) 3110) nil (25742 58146 347443 68000) 0 nil])
([nil current ((2552 . 2553) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 2541) (2540 . 2542) (#("\"" 0 1 (fontified nil ws-butler-chg chg)) . -2540) (2540 . 2541) (#(":" 0 1 (fontified t ws-butler-chg chg)) . -2540) (undo-tree-id769 . -1) (undo-tree-id770 . -1) 2541 (2540 . 2541) (t 25742 58146 360002 527000)) nil (25742 58640 820157 503000) 0 nil])
nil
